{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.test = exports.serialize = exports.default = void 0;\nvar _collections = require('../collections');\n\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n// SENTINEL constants are from https://github.com/facebook/immutable-js\nconst IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\nconst IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\nconst IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\nconst IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\nconst IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\nconst IS_RECORD_SENTINEL = '@@__IMMUTABLE_RECORD__@@'; // immutable v4\n\nconst IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\nconst IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\nconst IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\nconst getImmutableName = name => 'Immutable.' + name;\nconst printAsLeaf = name => '[' + name + ']';\nconst SPACE = ' ';\nconst LAZY = '…'; // Seq is lazy if it calls a method like filter\n\nconst printImmutableEntries = (val, config, indentation, depth, refs, printer, type) => ++depth > config.maxDepth ? printAsLeaf(getImmutableName(type)) : getImmutableName(type) + SPACE + '{' + (0, _collections.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer) + '}'; // Record has an entries method because it is a collection in immutable v3.\n// Return an iterator for Immutable Record from version v3 or v4.\n\nfunction getRecordEntries(val) {\n  let i = 0;\n  return {\n    next() {\n      if (i < val._keys.length) {\n        const key = val._keys[i++];\n        return {\n          done: false,\n          value: [key, val.get(key)]\n        };\n      }\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  };\n}\nconst printImmutableRecord = (val, config, indentation, depth, refs, printer) => {\n  // _name property is defined only for an Immutable Record instance\n  // which was constructed with a second optional descriptive name arg\n  const name = getImmutableName(val._name || 'Record');\n  return ++depth > config.maxDepth ? printAsLeaf(name) : name + SPACE + '{' + (0, _collections.printIteratorEntries)(getRecordEntries(val), config, indentation, depth, refs, printer) + '}';\n};\nconst printImmutableSeq = (val, config, indentation, depth, refs, printer) => {\n  const name = getImmutableName('Seq');\n  if (++depth > config.maxDepth) {\n    return printAsLeaf(name);\n  }\n  if (val[IS_KEYED_SENTINEL]) {\n    return name + SPACE + '{' + (\n    // from Immutable collection of entries or from ECMAScript object\n    val._iter || val._object ? (0, _collections.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer) : LAZY) + '}';\n  }\n  return name + SPACE + '[' + (val._iter ||\n  // from Immutable collection of values\n  val._array ||\n  // from ECMAScript array\n  val._collection ||\n  // from ECMAScript collection in immutable v4\n  val._iterable // from ECMAScript collection in immutable v3\n  ? (0, _collections.printIteratorValues)(val.values(), config, indentation, depth, refs, printer) : LAZY) + ']';\n};\nconst printImmutableValues = (val, config, indentation, depth, refs, printer, type) => ++depth > config.maxDepth ? printAsLeaf(getImmutableName(type)) : getImmutableName(type) + SPACE + '[' + (0, _collections.printIteratorValues)(val.values(), config, indentation, depth, refs, printer) + ']';\nconst serialize = (val, config, indentation, depth, refs, printer) => {\n  if (val[IS_MAP_SENTINEL]) {\n    return printImmutableEntries(val, config, indentation, depth, refs, printer, val[IS_ORDERED_SENTINEL] ? 'OrderedMap' : 'Map');\n  }\n  if (val[IS_LIST_SENTINEL]) {\n    return printImmutableValues(val, config, indentation, depth, refs, printer, 'List');\n  }\n  if (val[IS_SET_SENTINEL]) {\n    return printImmutableValues(val, config, indentation, depth, refs, printer, val[IS_ORDERED_SENTINEL] ? 'OrderedSet' : 'Set');\n  }\n  if (val[IS_STACK_SENTINEL]) {\n    return printImmutableValues(val, config, indentation, depth, refs, printer, 'Stack');\n  }\n  if (val[IS_SEQ_SENTINEL]) {\n    return printImmutableSeq(val, config, indentation, depth, refs, printer);\n  } // For compatibility with immutable v3 and v4, let record be the default.\n\n  return printImmutableRecord(val, config, indentation, depth, refs, printer);\n}; // Explicitly comparing sentinel properties to true avoids false positive\n// when mock identity-obj-proxy returns the key as the value for any key.\n\nexports.serialize = serialize;\nconst test = val => val && (val[IS_ITERABLE_SENTINEL] === true || val[IS_RECORD_SENTINEL] === true);\nexports.test = test;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","test","serialize","default","_collections","require","IS_ITERABLE_SENTINEL","IS_LIST_SENTINEL","IS_KEYED_SENTINEL","IS_MAP_SENTINEL","IS_ORDERED_SENTINEL","IS_RECORD_SENTINEL","IS_SEQ_SENTINEL","IS_SET_SENTINEL","IS_STACK_SENTINEL","getImmutableName","name","printAsLeaf","SPACE","LAZY","printImmutableEntries","val","config","indentation","depth","refs","printer","type","maxDepth","printIteratorEntries","entries","getRecordEntries","i","next","_keys","length","key","done","get","undefined","printImmutableRecord","_name","printImmutableSeq","_iter","_object","_array","_collection","_iterable","printIteratorValues","values","printImmutableValues","plugin","_default"],"sources":["E:/PROYECTO-PW-G5-CLIENTE/node_modules/pretty-format/build/plugins/Immutable.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', {\r\n  value: true\r\n});\r\nexports.test = exports.serialize = exports.default = void 0;\r\n\r\nvar _collections = require('../collections');\r\n\r\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n// SENTINEL constants are from https://github.com/facebook/immutable-js\r\nconst IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\r\nconst IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\r\nconst IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\r\nconst IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\r\nconst IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\r\nconst IS_RECORD_SENTINEL = '@@__IMMUTABLE_RECORD__@@'; // immutable v4\r\n\r\nconst IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\r\nconst IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\r\nconst IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\r\n\r\nconst getImmutableName = name => 'Immutable.' + name;\r\n\r\nconst printAsLeaf = name => '[' + name + ']';\r\n\r\nconst SPACE = ' ';\r\nconst LAZY = '…'; // Seq is lazy if it calls a method like filter\r\n\r\nconst printImmutableEntries = (\r\n  val,\r\n  config,\r\n  indentation,\r\n  depth,\r\n  refs,\r\n  printer,\r\n  type\r\n) =>\r\n  ++depth > config.maxDepth\r\n    ? printAsLeaf(getImmutableName(type))\r\n    : getImmutableName(type) +\r\n      SPACE +\r\n      '{' +\r\n      (0, _collections.printIteratorEntries)(\r\n        val.entries(),\r\n        config,\r\n        indentation,\r\n        depth,\r\n        refs,\r\n        printer\r\n      ) +\r\n      '}'; // Record has an entries method because it is a collection in immutable v3.\r\n// Return an iterator for Immutable Record from version v3 or v4.\r\n\r\nfunction getRecordEntries(val) {\r\n  let i = 0;\r\n  return {\r\n    next() {\r\n      if (i < val._keys.length) {\r\n        const key = val._keys[i++];\r\n        return {\r\n          done: false,\r\n          value: [key, val.get(key)]\r\n        };\r\n      }\r\n\r\n      return {\r\n        done: true,\r\n        value: undefined\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\nconst printImmutableRecord = (\r\n  val,\r\n  config,\r\n  indentation,\r\n  depth,\r\n  refs,\r\n  printer\r\n) => {\r\n  // _name property is defined only for an Immutable Record instance\r\n  // which was constructed with a second optional descriptive name arg\r\n  const name = getImmutableName(val._name || 'Record');\r\n  return ++depth > config.maxDepth\r\n    ? printAsLeaf(name)\r\n    : name +\r\n        SPACE +\r\n        '{' +\r\n        (0, _collections.printIteratorEntries)(\r\n          getRecordEntries(val),\r\n          config,\r\n          indentation,\r\n          depth,\r\n          refs,\r\n          printer\r\n        ) +\r\n        '}';\r\n};\r\n\r\nconst printImmutableSeq = (val, config, indentation, depth, refs, printer) => {\r\n  const name = getImmutableName('Seq');\r\n\r\n  if (++depth > config.maxDepth) {\r\n    return printAsLeaf(name);\r\n  }\r\n\r\n  if (val[IS_KEYED_SENTINEL]) {\r\n    return (\r\n      name +\r\n      SPACE +\r\n      '{' + // from Immutable collection of entries or from ECMAScript object\r\n      (val._iter || val._object\r\n        ? (0, _collections.printIteratorEntries)(\r\n            val.entries(),\r\n            config,\r\n            indentation,\r\n            depth,\r\n            refs,\r\n            printer\r\n          )\r\n        : LAZY) +\r\n      '}'\r\n    );\r\n  }\r\n\r\n  return (\r\n    name +\r\n    SPACE +\r\n    '[' +\r\n    (val._iter || // from Immutable collection of values\r\n    val._array || // from ECMAScript array\r\n    val._collection || // from ECMAScript collection in immutable v4\r\n    val._iterable // from ECMAScript collection in immutable v3\r\n      ? (0, _collections.printIteratorValues)(\r\n          val.values(),\r\n          config,\r\n          indentation,\r\n          depth,\r\n          refs,\r\n          printer\r\n        )\r\n      : LAZY) +\r\n    ']'\r\n  );\r\n};\r\n\r\nconst printImmutableValues = (\r\n  val,\r\n  config,\r\n  indentation,\r\n  depth,\r\n  refs,\r\n  printer,\r\n  type\r\n) =>\r\n  ++depth > config.maxDepth\r\n    ? printAsLeaf(getImmutableName(type))\r\n    : getImmutableName(type) +\r\n      SPACE +\r\n      '[' +\r\n      (0, _collections.printIteratorValues)(\r\n        val.values(),\r\n        config,\r\n        indentation,\r\n        depth,\r\n        refs,\r\n        printer\r\n      ) +\r\n      ']';\r\n\r\nconst serialize = (val, config, indentation, depth, refs, printer) => {\r\n  if (val[IS_MAP_SENTINEL]) {\r\n    return printImmutableEntries(\r\n      val,\r\n      config,\r\n      indentation,\r\n      depth,\r\n      refs,\r\n      printer,\r\n      val[IS_ORDERED_SENTINEL] ? 'OrderedMap' : 'Map'\r\n    );\r\n  }\r\n\r\n  if (val[IS_LIST_SENTINEL]) {\r\n    return printImmutableValues(\r\n      val,\r\n      config,\r\n      indentation,\r\n      depth,\r\n      refs,\r\n      printer,\r\n      'List'\r\n    );\r\n  }\r\n\r\n  if (val[IS_SET_SENTINEL]) {\r\n    return printImmutableValues(\r\n      val,\r\n      config,\r\n      indentation,\r\n      depth,\r\n      refs,\r\n      printer,\r\n      val[IS_ORDERED_SENTINEL] ? 'OrderedSet' : 'Set'\r\n    );\r\n  }\r\n\r\n  if (val[IS_STACK_SENTINEL]) {\r\n    return printImmutableValues(\r\n      val,\r\n      config,\r\n      indentation,\r\n      depth,\r\n      refs,\r\n      printer,\r\n      'Stack'\r\n    );\r\n  }\r\n\r\n  if (val[IS_SEQ_SENTINEL]) {\r\n    return printImmutableSeq(val, config, indentation, depth, refs, printer);\r\n  } // For compatibility with immutable v3 and v4, let record be the default.\r\n\r\n  return printImmutableRecord(val, config, indentation, depth, refs, printer);\r\n}; // Explicitly comparing sentinel properties to true avoids false positive\r\n// when mock identity-obj-proxy returns the key as the value for any key.\r\n\r\nexports.serialize = serialize;\r\n\r\nconst test = val =>\r\n  val &&\r\n  (val[IS_ITERABLE_SENTINEL] === true || val[IS_RECORD_SENTINEL] === true);\r\n\r\nexports.test = test;\r\nconst plugin = {\r\n  serialize,\r\n  test\r\n};\r\nvar _default = plugin;\r\nexports.default = _default;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}