{"ast":null,"code":"'use strict';\n\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\nvar GetIntrinsic = require('get-intrinsic');\nvar isTypedArray = require('is-typed-array');\nvar $ArrayBuffer = GetIntrinsic('ArrayBuffer', true);\nvar $Float32Array = GetIntrinsic('Float32Array', true);\nvar $byteLength = callBound('ArrayBuffer.prototype.byteLength', true);\n\n// in node 0.10, ArrayBuffers have no prototype methods, but have an own slot-checking `slice` method\nvar abSlice = $ArrayBuffer && !$byteLength && new $ArrayBuffer().slice;\nvar $abSlice = abSlice && callBind(abSlice);\nmodule.exports = $byteLength || $abSlice ? function isArrayBuffer(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n  try {\n    if ($byteLength) {\n      $byteLength(obj);\n    } else {\n      $abSlice(obj, 0);\n    }\n    return true;\n  } catch (e) {\n    return false;\n  }\n} : $Float32Array\n// in node 0.8, ArrayBuffers have no prototype or own methods\n? function IsArrayBuffer(obj) {\n  try {\n    return new $Float32Array(obj).buffer === obj && !isTypedArray(obj);\n  } catch (e) {\n    return typeof obj === 'object' && e.name === 'RangeError';\n  }\n} : function isArrayBuffer(obj) {\n  // eslint-disable-line no-unused-vars\n  return false;\n};","map":{"version":3,"names":["callBind","require","callBound","GetIntrinsic","isTypedArray","$ArrayBuffer","$Float32Array","$byteLength","abSlice","slice","$abSlice","module","exports","isArrayBuffer","obj","e","IsArrayBuffer","buffer","name"],"sources":["C:/Users/Alfredo Pacheco/Documents/PROYECTO-PW-G5-CLIENTE/node_modules/is-array-buffer/index.js"],"sourcesContent":["'use strict';\r\n\r\nvar callBind = require('call-bind');\r\nvar callBound = require('call-bind/callBound');\r\nvar GetIntrinsic = require('get-intrinsic');\r\nvar isTypedArray = require('is-typed-array');\r\n\r\nvar $ArrayBuffer = GetIntrinsic('ArrayBuffer', true);\r\nvar $Float32Array = GetIntrinsic('Float32Array', true);\r\nvar $byteLength = callBound('ArrayBuffer.prototype.byteLength', true);\r\n\r\n// in node 0.10, ArrayBuffers have no prototype methods, but have an own slot-checking `slice` method\r\nvar abSlice = $ArrayBuffer && !$byteLength && new $ArrayBuffer().slice;\r\nvar $abSlice = abSlice && callBind(abSlice);\r\n\r\nmodule.exports = $byteLength || $abSlice\r\n\t? function isArrayBuffer(obj) {\r\n\t\tif (!obj || typeof obj !== 'object') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tif ($byteLength) {\r\n\t\t\t\t$byteLength(obj);\r\n\t\t\t} else {\r\n\t\t\t\t$abSlice(obj, 0);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t: $Float32Array\r\n\t\t// in node 0.8, ArrayBuffers have no prototype or own methods\r\n\t\t? function IsArrayBuffer(obj) {\r\n\t\t\ttry {\r\n\t\t\t\treturn (new $Float32Array(obj)).buffer === obj && !isTypedArray(obj);\r\n\t\t\t} catch (e) {\r\n\t\t\t\treturn typeof obj === 'object' && e.name === 'RangeError';\r\n\t\t\t}\r\n\t\t}\r\n\t\t: function isArrayBuffer(obj) { // eslint-disable-line no-unused-vars\r\n\t\t\treturn false;\r\n\t\t};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AACnC,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIE,YAAY,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIG,YAAY,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AAE5C,IAAII,YAAY,GAAGF,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC;AACpD,IAAIG,aAAa,GAAGH,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC;AACtD,IAAII,WAAW,GAAGL,SAAS,CAAC,kCAAkC,EAAE,IAAI,CAAC;;AAErE;AACA,IAAIM,OAAO,GAAGH,YAAY,IAAI,CAACE,WAAW,IAAI,IAAIF,YAAY,CAAC,CAAC,CAACI,KAAK;AACtE,IAAIC,QAAQ,GAAGF,OAAO,IAAIR,QAAQ,CAACQ,OAAO,CAAC;AAE3CG,MAAM,CAACC,OAAO,GAAGL,WAAW,IAAIG,QAAQ,GACrC,SAASG,aAAaA,CAACC,GAAG,EAAE;EAC7B,IAAI,CAACA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACpC,OAAO,KAAK;EACb;EACA,IAAI;IACH,IAAIP,WAAW,EAAE;MAChBA,WAAW,CAACO,GAAG,CAAC;IACjB,CAAC,MAAM;MACNJ,QAAQ,CAACI,GAAG,EAAE,CAAC,CAAC;IACjB;IACA,OAAO,IAAI;EACZ,CAAC,CAAC,OAAOC,CAAC,EAAE;IACX,OAAO,KAAK;EACb;AACD,CAAC,GACCT;AACD;AAAA,EACE,SAASU,aAAaA,CAACF,GAAG,EAAE;EAC7B,IAAI;IACH,OAAQ,IAAIR,aAAa,CAACQ,GAAG,CAAC,CAAEG,MAAM,KAAKH,GAAG,IAAI,CAACV,YAAY,CAACU,GAAG,CAAC;EACrE,CAAC,CAAC,OAAOC,CAAC,EAAE;IACX,OAAO,OAAOD,GAAG,KAAK,QAAQ,IAAIC,CAAC,CAACG,IAAI,KAAK,YAAY;EAC1D;AACD,CAAC,GACC,SAASL,aAAaA,CAACC,GAAG,EAAE;EAAE;EAC/B,OAAO,KAAK;AACb,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}