{"ast":null,"code":"'use strict';\n\n/* eslint global-require: 0 */\n// the code is structured this way so that bundlers can\n// alias out `has-symbols` to `() => true` or `() => false` if your target\n// environments' Symbol capabilities are known, and then use\n// dead code elimination on the rest of this module.\n//\n// Similarly, `isarray` can be aliased to `Array.isArray` if\n// available in all target environments.\nvar isArguments = require('is-arguments');\nvar getStopIterationIterator = require('stop-iteration-iterator');\nif (require('has-symbols')() || require('has-symbols/shams')()) {\n  var $iterator = Symbol.iterator;\n  // Symbol is available natively or shammed\n  // natively:\n  //  - Chrome >= 38\n  //  - Edge 12-14?, Edge >= 15 for sure\n  //  - FF >= 36\n  //  - Safari >= 9\n  //  - node >= 0.12\n  module.exports = function getIterator(iterable) {\n    // alternatively, `iterable[$iterator]?.()`\n    if (iterable != null && typeof iterable[$iterator] !== 'undefined') {\n      return iterable[$iterator]();\n    }\n    if (isArguments(iterable)) {\n      // arguments objects lack Symbol.iterator\n      // - node 0.12\n      return Array.prototype[$iterator].call(iterable);\n    }\n  };\n} else {\n  // Symbol is not available, native or shammed\n  var isArray = require('isarray');\n  var isString = require('is-string');\n  var GetIntrinsic = require('get-intrinsic');\n  var $Map = GetIntrinsic('%Map%', true);\n  var $Set = GetIntrinsic('%Set%', true);\n  var callBound = require('call-bind/callBound');\n  var $arrayPush = callBound('Array.prototype.push');\n  var $charCodeAt = callBound('String.prototype.charCodeAt');\n  var $stringSlice = callBound('String.prototype.slice');\n  var advanceStringIndex = function advanceStringIndex(S, index) {\n    var length = S.length;\n    if (index + 1 >= length) {\n      return index + 1;\n    }\n    var first = $charCodeAt(S, index);\n    if (first < 0xD800 || first > 0xDBFF) {\n      return index + 1;\n    }\n    var second = $charCodeAt(S, index + 1);\n    if (second < 0xDC00 || second > 0xDFFF) {\n      return index + 1;\n    }\n    return index + 2;\n  };\n  var getArrayIterator = function getArrayIterator(arraylike) {\n    var i = 0;\n    return {\n      next: function next() {\n        var done = i >= arraylike.length;\n        var value;\n        if (!done) {\n          value = arraylike[i];\n          i += 1;\n        }\n        return {\n          done: done,\n          value: value\n        };\n      }\n    };\n  };\n  var getNonCollectionIterator = function getNonCollectionIterator(iterable, noPrimordialCollections) {\n    if (isArray(iterable) || isArguments(iterable)) {\n      return getArrayIterator(iterable);\n    }\n    if (isString(iterable)) {\n      var i = 0;\n      return {\n        next: function next() {\n          var nextIndex = advanceStringIndex(iterable, i);\n          var value = $stringSlice(iterable, i, nextIndex);\n          i = nextIndex;\n          return {\n            done: nextIndex > iterable.length,\n            value: value\n          };\n        }\n      };\n    }\n\n    // es6-shim and es-shims' es-map use a string \"_es6-shim iterator_\" property on different iterables, such as MapIterator.\n    if (noPrimordialCollections && typeof iterable['_es6-shim iterator_'] !== 'undefined') {\n      return iterable['_es6-shim iterator_']();\n    }\n  };\n  if (!$Map && !$Set) {\n    // the only language iterables are Array, String, arguments\n    // - Safari <= 6.0\n    // - Chrome < 38\n    // - node < 0.12\n    // - FF < 13\n    // - IE < 11\n    // - Edge < 11\n\n    module.exports = function getIterator(iterable) {\n      if (iterable != null) {\n        return getNonCollectionIterator(iterable, true);\n      }\n    };\n  } else {\n    // either Map or Set are available, but Symbol is not\n    // - es6-shim on an ES5 browser\n    // - Safari 6.2 (maybe 6.1?)\n    // - FF v[13, 36)\n    // - IE 11\n    // - Edge 11\n    // - Safari v[6, 9)\n\n    var isMap = require('is-map');\n    var isSet = require('is-set');\n\n    // Firefox >= 27, IE 11, Safari 6.2 - 9, Edge 11, es6-shim in older envs, all have forEach\n    var $mapForEach = callBound('Map.prototype.forEach', true);\n    var $setForEach = callBound('Set.prototype.forEach', true);\n    if (typeof process === 'undefined' || !process.versions || !process.versions.node) {\n      // \"if is not node\"\n\n      // Firefox 17 - 26 has `.iterator()`, whose iterator `.next()` either\n      // returns a value, or throws a StopIteration object. These browsers\n      // do not have any other mechanism for iteration.\n      var $mapIterator = callBound('Map.prototype.iterator', true);\n      var $setIterator = callBound('Set.prototype.iterator', true);\n    }\n    // Firefox 27-35, and some older es6-shim versions, use a string \"@@iterator\" property\n    // this returns a proper iterator object, so we should use it instead of forEach.\n    // newer es6-shim versions use a string \"_es6-shim iterator_\" property.\n    var $mapAtAtIterator = callBound('Map.prototype.@@iterator', true) || callBound('Map.prototype._es6-shim iterator_', true);\n    var $setAtAtIterator = callBound('Set.prototype.@@iterator', true) || callBound('Set.prototype._es6-shim iterator_', true);\n    var getCollectionIterator = function getCollectionIterator(iterable) {\n      if (isMap(iterable)) {\n        if ($mapIterator) {\n          return getStopIterationIterator($mapIterator(iterable));\n        }\n        if ($mapAtAtIterator) {\n          return $mapAtAtIterator(iterable);\n        }\n        if ($mapForEach) {\n          var entries = [];\n          $mapForEach(iterable, function (v, k) {\n            $arrayPush(entries, [k, v]);\n          });\n          return getArrayIterator(entries);\n        }\n      }\n      if (isSet(iterable)) {\n        if ($setIterator) {\n          return getStopIterationIterator($setIterator(iterable));\n        }\n        if ($setAtAtIterator) {\n          return $setAtAtIterator(iterable);\n        }\n        if ($setForEach) {\n          var values = [];\n          $setForEach(iterable, function (v) {\n            $arrayPush(values, v);\n          });\n          return getArrayIterator(values);\n        }\n      }\n    };\n    module.exports = function getIterator(iterable) {\n      return getCollectionIterator(iterable) || getNonCollectionIterator(iterable);\n    };\n  }\n}","map":{"version":3,"names":["isArguments","require","getStopIterationIterator","$iterator","Symbol","iterator","module","exports","getIterator","iterable","Array","prototype","call","isArray","isString","GetIntrinsic","$Map","$Set","callBound","$arrayPush","$charCodeAt","$stringSlice","advanceStringIndex","S","index","length","first","second","getArrayIterator","arraylike","i","next","done","value","getNonCollectionIterator","noPrimordialCollections","nextIndex","isMap","isSet","$mapForEach","$setForEach","process","versions","node","$mapIterator","$setIterator","$mapAtAtIterator","$setAtAtIterator","getCollectionIterator","entries","v","k","values"],"sources":["C:/Users/Alfredo Pacheco/Documents/PROYECTO-PW-G5-CLIENTE/node_modules/es-get-iterator/index.js"],"sourcesContent":["'use strict';\r\n\r\n/* eslint global-require: 0 */\r\n// the code is structured this way so that bundlers can\r\n// alias out `has-symbols` to `() => true` or `() => false` if your target\r\n// environments' Symbol capabilities are known, and then use\r\n// dead code elimination on the rest of this module.\r\n//\r\n// Similarly, `isarray` can be aliased to `Array.isArray` if\r\n// available in all target environments.\r\n\r\nvar isArguments = require('is-arguments');\r\nvar getStopIterationIterator = require('stop-iteration-iterator');\r\n\r\nif (require('has-symbols')() || require('has-symbols/shams')()) {\r\n\tvar $iterator = Symbol.iterator;\r\n\t// Symbol is available natively or shammed\r\n\t// natively:\r\n\t//  - Chrome >= 38\r\n\t//  - Edge 12-14?, Edge >= 15 for sure\r\n\t//  - FF >= 36\r\n\t//  - Safari >= 9\r\n\t//  - node >= 0.12\r\n\tmodule.exports = function getIterator(iterable) {\r\n\t\t// alternatively, `iterable[$iterator]?.()`\r\n\t\tif (iterable != null && typeof iterable[$iterator] !== 'undefined') {\r\n\t\t\treturn iterable[$iterator]();\r\n\t\t}\r\n\t\tif (isArguments(iterable)) {\r\n\t\t\t// arguments objects lack Symbol.iterator\r\n\t\t\t// - node 0.12\r\n\t\t\treturn Array.prototype[$iterator].call(iterable);\r\n\t\t}\r\n\t};\r\n} else {\r\n\t// Symbol is not available, native or shammed\r\n\tvar isArray = require('isarray');\r\n\tvar isString = require('is-string');\r\n\tvar GetIntrinsic = require('get-intrinsic');\r\n\tvar $Map = GetIntrinsic('%Map%', true);\r\n\tvar $Set = GetIntrinsic('%Set%', true);\r\n\tvar callBound = require('call-bind/callBound');\r\n\tvar $arrayPush = callBound('Array.prototype.push');\r\n\tvar $charCodeAt = callBound('String.prototype.charCodeAt');\r\n\tvar $stringSlice = callBound('String.prototype.slice');\r\n\r\n\tvar advanceStringIndex = function advanceStringIndex(S, index) {\r\n\t\tvar length = S.length;\r\n\t\tif ((index + 1) >= length) {\r\n\t\t\treturn index + 1;\r\n\t\t}\r\n\r\n\t\tvar first = $charCodeAt(S, index);\r\n\t\tif (first < 0xD800 || first > 0xDBFF) {\r\n\t\t\treturn index + 1;\r\n\t\t}\r\n\r\n\t\tvar second = $charCodeAt(S, index + 1);\r\n\t\tif (second < 0xDC00 || second > 0xDFFF) {\r\n\t\t\treturn index + 1;\r\n\t\t}\r\n\r\n\t\treturn index + 2;\r\n\t};\r\n\r\n\tvar getArrayIterator = function getArrayIterator(arraylike) {\r\n\t\tvar i = 0;\r\n\t\treturn {\r\n\t\t\tnext: function next() {\r\n\t\t\t\tvar done = i >= arraylike.length;\r\n\t\t\t\tvar value;\r\n\t\t\t\tif (!done) {\r\n\t\t\t\t\tvalue = arraylike[i];\r\n\t\t\t\t\ti += 1;\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdone: done,\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tvar getNonCollectionIterator = function getNonCollectionIterator(iterable, noPrimordialCollections) {\r\n\t\tif (isArray(iterable) || isArguments(iterable)) {\r\n\t\t\treturn getArrayIterator(iterable);\r\n\t\t}\r\n\t\tif (isString(iterable)) {\r\n\t\t\tvar i = 0;\r\n\t\t\treturn {\r\n\t\t\t\tnext: function next() {\r\n\t\t\t\t\tvar nextIndex = advanceStringIndex(iterable, i);\r\n\t\t\t\t\tvar value = $stringSlice(iterable, i, nextIndex);\r\n\t\t\t\t\ti = nextIndex;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdone: nextIndex > iterable.length,\r\n\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// es6-shim and es-shims' es-map use a string \"_es6-shim iterator_\" property on different iterables, such as MapIterator.\r\n\t\tif (noPrimordialCollections && typeof iterable['_es6-shim iterator_'] !== 'undefined') {\r\n\t\t\treturn iterable['_es6-shim iterator_']();\r\n\t\t}\r\n\t};\r\n\r\n\tif (!$Map && !$Set) {\r\n\t\t// the only language iterables are Array, String, arguments\r\n\t\t// - Safari <= 6.0\r\n\t\t// - Chrome < 38\r\n\t\t// - node < 0.12\r\n\t\t// - FF < 13\r\n\t\t// - IE < 11\r\n\t\t// - Edge < 11\r\n\r\n\t\tmodule.exports = function getIterator(iterable) {\r\n\t\t\tif (iterable != null) {\r\n\t\t\t\treturn getNonCollectionIterator(iterable, true);\r\n\t\t\t}\r\n\t\t};\r\n\t} else {\r\n\t\t// either Map or Set are available, but Symbol is not\r\n\t\t// - es6-shim on an ES5 browser\r\n\t\t// - Safari 6.2 (maybe 6.1?)\r\n\t\t// - FF v[13, 36)\r\n\t\t// - IE 11\r\n\t\t// - Edge 11\r\n\t\t// - Safari v[6, 9)\r\n\r\n\t\tvar isMap = require('is-map');\r\n\t\tvar isSet = require('is-set');\r\n\r\n\t\t// Firefox >= 27, IE 11, Safari 6.2 - 9, Edge 11, es6-shim in older envs, all have forEach\r\n\t\tvar $mapForEach = callBound('Map.prototype.forEach', true);\r\n\t\tvar $setForEach = callBound('Set.prototype.forEach', true);\r\n\t\tif (typeof process === 'undefined' || !process.versions || !process.versions.node) { // \"if is not node\"\r\n\r\n\t\t\t// Firefox 17 - 26 has `.iterator()`, whose iterator `.next()` either\r\n\t\t\t// returns a value, or throws a StopIteration object. These browsers\r\n\t\t\t// do not have any other mechanism for iteration.\r\n\t\t\tvar $mapIterator = callBound('Map.prototype.iterator', true);\r\n\t\t\tvar $setIterator = callBound('Set.prototype.iterator', true);\r\n\t\t}\r\n\t\t// Firefox 27-35, and some older es6-shim versions, use a string \"@@iterator\" property\r\n\t\t// this returns a proper iterator object, so we should use it instead of forEach.\r\n\t\t// newer es6-shim versions use a string \"_es6-shim iterator_\" property.\r\n\t\tvar $mapAtAtIterator = callBound('Map.prototype.@@iterator', true) || callBound('Map.prototype._es6-shim iterator_', true);\r\n\t\tvar $setAtAtIterator = callBound('Set.prototype.@@iterator', true) || callBound('Set.prototype._es6-shim iterator_', true);\r\n\r\n\t\tvar getCollectionIterator = function getCollectionIterator(iterable) {\r\n\t\t\tif (isMap(iterable)) {\r\n\t\t\t\tif ($mapIterator) {\r\n\t\t\t\t\treturn getStopIterationIterator($mapIterator(iterable));\r\n\t\t\t\t}\r\n\t\t\t\tif ($mapAtAtIterator) {\r\n\t\t\t\t\treturn $mapAtAtIterator(iterable);\r\n\t\t\t\t}\r\n\t\t\t\tif ($mapForEach) {\r\n\t\t\t\t\tvar entries = [];\r\n\t\t\t\t\t$mapForEach(iterable, function (v, k) {\r\n\t\t\t\t\t\t$arrayPush(entries, [k, v]);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn getArrayIterator(entries);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (isSet(iterable)) {\r\n\t\t\t\tif ($setIterator) {\r\n\t\t\t\t\treturn getStopIterationIterator($setIterator(iterable));\r\n\t\t\t\t}\r\n\t\t\t\tif ($setAtAtIterator) {\r\n\t\t\t\t\treturn $setAtAtIterator(iterable);\r\n\t\t\t\t}\r\n\t\t\t\tif ($setForEach) {\r\n\t\t\t\t\tvar values = [];\r\n\t\t\t\t\t$setForEach(iterable, function (v) {\r\n\t\t\t\t\t\t$arrayPush(values, v);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn getArrayIterator(values);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tmodule.exports = function getIterator(iterable) {\r\n\t\t\treturn getCollectionIterator(iterable) || getNonCollectionIterator(iterable);\r\n\t\t};\r\n\t}\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}